#DB.README.md 참고

version: '3'
services:
  setup:
    profiles:
      - setup
    build:
      context: ./db/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./db/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./db/setup/lib.sh:/lib.sh:ro,Z
      - ./db/setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: ./db/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./db/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    restart: unless-stopped

  kibana:
    build:
      context: ./db/kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./db/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    depends_on:
      - elasticsearch
    restart: unless-stopped

  #mgdb접속 후 mongosh /usr/src/config/set.js 입력하면 레플리카셋 설정
  mgdb:
    image: mongo:latest
    volumes:
      - ./db/mgdb.repl.config:/usr/src/config
    command: mongod --replSet rs0 --bind_ip_all
    restart: always
    ports:
      - 27018:27017

  mgdb2:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all
    restart: always
    ports:
      - 27019:27017

  monstache:
    restart: always
    image: rwynn/monstache:rel6
    command: -f /usr/src/mons.config.toml &
    volumes:
      - ./db/mons.config.toml:/usr/src/mons.config.toml
    depends_on:
      - elasticsearch
      - mgdb
      - mgdb2
    links:
      - elasticsearch
    ports:
      - '8080:8080'

  pgdb:
    image: postgres:latest
    restart: always
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
